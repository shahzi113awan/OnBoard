[{"F:\\onBoard\\OnBoard\\src\\index.js":"1","F:\\onBoard\\OnBoard\\src\\reportWebVitals.js":"2","F:\\onBoard\\OnBoard\\src\\App.js":"3","F:\\onBoard\\OnBoard\\src\\Components\\MultipleShareKYC.jsx":"4","F:\\onBoard\\OnBoard\\src\\Components\\KYC.jsx":"5","F:\\onBoard\\OnBoard\\src\\Components\\KYB.jsx":"6","F:\\onBoard\\OnBoard\\src\\Components\\CTI.jsx":"7","F:\\onBoard\\OnBoard\\src\\actions\\completedAction.js":"8","F:\\onBoard\\OnBoard\\src\\store.js":"9","F:\\onBoard\\OnBoard\\src\\reducers\\index.js":"10","F:\\onBoard\\OnBoard\\src\\reducers\\completedReducer.js":"11"},{"size":673,"mtime":1612414060877,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1612326921940,"results":"14","hashOfConfig":"13"},{"size":501,"mtime":1612417643244,"results":"15","hashOfConfig":"13"},{"size":237,"mtime":1612441375708,"results":"16","hashOfConfig":"13"},{"size":5971,"mtime":1612441337971,"results":"17","hashOfConfig":"13"},{"size":3111,"mtime":1612441359046,"results":"18","hashOfConfig":"13"},{"size":4401,"mtime":1612441352464,"results":"19","hashOfConfig":"13"},{"size":489,"mtime":1612418530391,"results":"20","hashOfConfig":"13"},{"size":392,"mtime":1612420527249,"results":"21","hashOfConfig":"13"},{"size":158,"mtime":1612418031955,"results":"22","hashOfConfig":"13"},{"size":475,"mtime":1612436752937,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"oka0lf",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\onBoard\\OnBoard\\src\\index.js",["52","53"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport $ from \"jquery\";\r\nimport Popper from \"popper.js\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["54","55"],"F:\\onBoard\\OnBoard\\src\\reportWebVitals.js",[],"F:\\onBoard\\OnBoard\\src\\App.js",["56","57","58"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport KYC from \"./Components/KYC\";\r\nimport Multiple from \"./Components/MultipleShareKYC\";\r\nimport CTI from \"./Components/CTI\";\r\nimport KYB from \"./Components/KYB\";\r\nimport store from './store'\r\nimport {Provider} from 'react-redux'\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Provider store={store}>\r\n        <KYC />\r\n        <CTI />\r\n      </Provider>\r\n      {/* <KYB /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\onBoard\\OnBoard\\src\\Components\\MultipleShareKYC.jsx",["59"],"import React from \"react\";\r\nimport KYC from \"./KYC\";\r\nconst NewKYC = (e) => {\r\n  return <KYC />;\r\n};\r\nexport default function MultipleShareKYC() {\r\n  return (\r\n    <div>\r\n      <KYC />\r\n      <KYC />\r\n      <KYC />\r\n    </div>\r\n  );\r\n}\r\n","F:\\onBoard\\OnBoard\\src\\Components\\KYC.jsx",["60"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Col, Row,   Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport moment from \"moment\";\r\nimport countryList from \"react-select-country-list\";\r\nimport Select from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\nimport { completed, pending } from \"../actions/completedAction\";\r\nconst KYC = ({ Done, completed, pending }) => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [ExpiryDate, setExpiryDate] = useState();\r\n  const [remainig, setremainig] = useState(0);\r\n  const [value, setValue] = useState(\"\");\r\n  const options = useMemo(() => countryList().getData(), []);\r\n  const [color, setColor] = useState(\"none\");\r\n\r\n  const changeHandler = (value) => {\r\n    console.log(value);\r\n    setValue(value);\r\n  };\r\n  const onChangeStartDAte = (e) => {\r\n    setStartDate(e.target.value);\r\n  };\r\n  const onChangeExpiryDAte = (e) => {\r\n    setExpiryDate(e.target.value);\r\n  };\r\n  //CalculateDays\r\n  useEffect(() => {\r\n    if (startDate && ExpiryDate) {\r\n      const Start = moment(new Date()).format(\"MM/DD/YYYY\");\r\n\r\n      console.log(Start);\r\n      const End = moment(ExpiryDate);\r\n      console.log(ExpiryDate);\r\n      const days = moment.duration(End.diff(Start)).asDays();\r\n\r\n      setremainig(days);\r\n      if (days > 90) setColor(\"#ADFF2F\");\r\n      else if (days < 90 && days > 45) setColor(\"#FFBF00\");\r\n      else setColor(\"\t#FA8072\");\r\n      return days;\r\n    }\r\n  }, [ExpiryDate]);\r\n  //End\r\n  const fun = (e) => {\r\n    console.log(e.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"Name\">Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"Name\"\r\n                placeholder=\"Share Holder Name\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"shareHolds\">Share Holds</Label>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"shareHolds\"\r\n                id=\"shareHolds\"\r\n                placeholder=\"Share Holds Percent\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for=\"passportID\">Passport / ID</Label>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"passportID\"\r\n                id=\"passportID\"\r\n                placeholder=\" Passport or ID\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label for=\"ExpiryDate\">Start Date</Label>\r\n              <Input\r\n                onChange={(e) => {\r\n                  onChangeStartDAte(e);\r\n                }}\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                id=\"startDate\"\r\n                placeholder=\" Passport or ID\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label for=\"ExpiryDate\">Expiry Date</Label>\r\n              <Input\r\n                onChange={(e) => {\r\n                  onChangeExpiryDAte(e);\r\n                }}\r\n                type=\"date\"\r\n                name=\"ExpiryDate\"\r\n                id=\"ExpiryDate\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <FormGroup>\r\n              <Label for=\"remainingDays\">Remaining Days</Label>\r\n              <Input\r\n                style={{ backgroundColor: color }}\r\n                type=\"text\"\r\n                disabled={true}\r\n                value={remainig}\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"Nationality\">Country/Nationality</Label>\r\n              <Select\r\n                options={options}\r\n                value={value}\r\n                onChange={changeHandler}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"Notaized\">Notarized</Label>\r\n              <Input\r\n                type=\"select\"\r\n                options={(\"yes\", \"no\")}\r\n                placeholder=\" Nationality\"\r\n              >\r\n                <option value=\"0\">No</option>\r\n                <option value=\"1\">yes</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"Address\">Address</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"address2\"\r\n                id=\"Address\"\r\n                placeholder=\"Address\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"typeOfProof\">Type of Proof</Label>\r\n              <Input\r\n                type=\"select\"\r\n                onChange={(e) => {\r\n                  fun(e);\r\n                }}\r\n              >\r\n                <option value=\"0\">Utility Bill</option>\r\n                <option value=\"1\">Others</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"PAd\">Power Of Attorney Document:</Label>\r\n              <Input\r\n                type=\"select\"\r\n                onChange={(e) => {\r\n                  fun(e);\r\n                }}\r\n              >\r\n                <option value=\"0\">Pending</option>\r\n                <option value=\"1\">Completed</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Done: state.completedReducer.complete,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  completed,\r\n  pending,\r\n})(KYC);\r\n","F:\\onBoard\\OnBoard\\src\\Components\\KYB.jsx",["61"],"import React from \"react\";\r\nimport { Col, Row,  Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nexport default function CTI() {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>\r\n          <span class=\"badge badge-success\">Know Your Business (KYB):</span>\r\n        </h2>\r\n      </div>\r\n      <Form>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"certificate\">Certificate of Incorporation:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"memo\">Memorandum of Association:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"articles\">Articles of Association:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"shareRegister\">Share Register:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"shareCertificate\">\r\n                Share Certificate(s) - Signed:\r\n              </Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"CCR\">Current Commercial Register Extract:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","F:\\onBoard\\OnBoard\\src\\Components\\CTI.jsx",[],"F:\\onBoard\\OnBoard\\src\\actions\\completedAction.js",[],"F:\\onBoard\\OnBoard\\src\\store.js",[],"F:\\onBoard\\OnBoard\\src\\reducers\\index.js",[],"F:\\onBoard\\OnBoard\\src\\reducers\\completedReducer.js",[],{"ruleId":"62","severity":1,"message":"63","line":7,"column":8,"nodeType":"64","messageId":"65","endLine":7,"endColumn":9},{"ruleId":"62","severity":1,"message":"66","line":8,"column":8,"nodeType":"64","messageId":"65","endLine":8,"endColumn":14},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"62","severity":1,"message":"71","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":12},{"ruleId":"62","severity":1,"message":"72","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":16},{"ruleId":"62","severity":1,"message":"73","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":11},{"ruleId":"62","severity":1,"message":"74","line":3,"column":7,"nodeType":"64","messageId":"65","endLine":3,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":42,"column":6,"nodeType":"77","endLine":42,"endColumn":18,"suggestions":"78"},{"ruleId":"62","severity":1,"message":"79","line":2,"column":45,"nodeType":"64","messageId":"65","endLine":2,"endColumn":50},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'logo' is defined but never used.","'Multiple' is defined but never used.","'KYB' is defined but never used.","'NewKYC' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'startDate'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [ExpiryDate, startDate]",{"range":"85","text":"86"},[1473,1485],"[ExpiryDate, startDate]"]