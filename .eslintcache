[{"C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\index.js":"1","C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\reportWebVitals.js":"2","C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\App.js":"3","C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\Components\\MultipleShareKYC.jsx":"4","C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\Components\\KYC.jsx":"5","C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\Components\\CTI.jsx":"6","C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\Components\\KYB.jsx":"7","C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\Components\\supportingDocKYB.jsx":"8"},{"size":673,"mtime":1612401285947,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1612365871188,"results":"11","hashOfConfig":"10"},{"size":444,"mtime":1612452041310,"results":"12","hashOfConfig":"10"},{"size":274,"mtime":1612374502651,"results":"13","hashOfConfig":"10"},{"size":5639,"mtime":1612372704357,"results":"14","hashOfConfig":"10"},{"size":3773,"mtime":1612408029427,"results":"15","hashOfConfig":"10"},{"size":3118,"mtime":1612402258394,"results":"16","hashOfConfig":"10"},{"size":4808,"mtime":1612453205839,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"f50h9w",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\index.js",["40","41"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport $ from \"jquery\";\r\nimport Popper from \"popper.js\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["42","43"],"C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\reportWebVitals.js",[],"C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\App.js",["44","45","46","47","48"],"C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\Components\\MultipleShareKYC.jsx",["49","50"],"import { Button } from \"bootstrap\";\r\nimport React from \"react\";\r\nimport KYC from \"./KYC\";\r\nconst NewKYC = (e) => {\r\n  return <KYC />;\r\n};\r\nexport default function MultipleShareKYC() {\r\n  return (\r\n    <div>\r\n      <KYC />\r\n      <KYC />\r\n      <KYC />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\Components\\KYC.jsx",["51","52"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport moment from \"moment\";\r\nimport countryList from \"react-select-country-list\";\r\nimport Select from \"react-select\";\r\n\r\nconst KYC = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [ExpiryDate, setExpiryDate] = useState();\r\n  const [remainig, setremainig] = useState(0);\r\n  const [value, setValue] = useState(\"\");\r\n  const options = useMemo(() => countryList().getData(), []);\r\n  const [color, setColor] = useState(\"none\");\r\n\r\n  const changeHandler = (value) => {\r\n    console.log(value);\r\n    setValue(value);\r\n  };\r\n  const onChangeStartDAte = (e) => {\r\n    setStartDate(e.target.value);\r\n  };\r\n  const onChangeExpiryDAte = (e) => {\r\n    setExpiryDate(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (startDate && ExpiryDate) {\r\n      const Start = moment(new Date()).format(\"MM/DD/YYYY\");\r\n\r\n      console.log(Start);\r\n      const End = moment(ExpiryDate);\r\n      console.log(ExpiryDate);\r\n      const days = moment.duration(End.diff(Start)).asDays();\r\n      console.log(days);\r\n      setremainig(days);\r\n      if (days > 90) setColor(\"#ADFF2F\");\r\n      else if (days < 90 && days > 45) setColor(\"#FFBF00\");\r\n      else setColor(\"\t#FA8072\");\r\n      return days;\r\n    }\r\n  }, [ExpiryDate]);\r\n\r\n  const fun = (e) => {\r\n    console.log(e.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"Name\">Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"Name\"\r\n                placeholder=\"Share Holder Name\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"shareHolds\">Share Holds</Label>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"shareHolds\"\r\n                id=\"shareHolds\"\r\n                placeholder=\"Share Holds Percent\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for=\"passportID\">Passport / ID</Label>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"passportID\"\r\n                id=\"passportID\"\r\n                placeholder=\" Passport or ID\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label for=\"ExpiryDate\">Start Date</Label>\r\n              <Input\r\n                onChange={(e) => {\r\n                  onChangeStartDAte(e);\r\n                }}\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                id=\"startDate\"\r\n                placeholder=\" Passport or ID\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label for=\"ExpiryDate\">Expiry Date</Label>\r\n              <Input\r\n                onChange={(e) => {\r\n                  onChangeExpiryDAte(e);\r\n                }}\r\n                type=\"date\"\r\n                name=\"ExpiryDate\"\r\n                id=\"ExpiryDate\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <FormGroup>\r\n              <Label for=\"remainingDays\">Remaining Days</Label>\r\n              <Input\r\n                style={{ backgroundColor: color }}\r\n                type=\"text\"\r\n                disabled={true}\r\n                value={remainig}\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"Nationality\">Country/Nationality</Label>\r\n              <Select\r\n                options={options}\r\n                value={value}\r\n                onChange={changeHandler}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"Notaized\">Notarized</Label>\r\n              <Input\r\n                type=\"select\"\r\n                options={(\"yes\", \"no\")}\r\n                placeholder=\" Nationality\"\r\n              >\r\n                <option>No</option>\r\n                <option>yes</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"Address\">Address</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"address2\"\r\n                id=\"Address\"\r\n                placeholder=\"Address\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"typeOfProof\">Type of Proof</Label>\r\n              <Input\r\n                type=\"select\"\r\n                onChange={(e) => {\r\n                  fun(e);\r\n                }}\r\n              >\r\n                <option>Utility Bill</option>\r\n                <option>Others</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"PAd\">Power Of Attorney Document:</Label>\r\n              <Input\r\n                type=\"select\"\r\n                onChange={(e) => {\r\n                  fun(e);\r\n                }}\r\n              >\r\n                <option>Pending</option>\r\n                <option>Completed</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KYC;\r\n","C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\Components\\CTI.jsx",["53"],"import React from \"react\";\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nexport default function CTI() {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>\r\n          <span class=\"badge badge-success\">COMPANY TRADING INFORMATION</span>\r\n        </h2>\r\n      </div>\r\n      <Form>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"certificate\">Fully Completed Application Form:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"memo\">Bank Information (Welcome Letter):</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"OTA\">Office Tenancy Agreement:</Label>\r\n\r\n              <Input\r\n                required={false}\r\n                type=\"text\"\r\n                name=\"OTA\"\r\n                id=\"Name\"\r\n                placeholder=\"OTA\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"shareRegister\">Headline Website URL Address:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"shareCertificate\">Website Compliance:</Label>\r\n              <Input\r\n                type=\"url\"\r\n                name=\"OTA\"\r\n                id=\"Url\"\r\n                placeholder=\"Company URL\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"CCR\">Website URL - Proof of Domain:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"CCR\">Ownership Structure Chart:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"CCR\">Business Plan:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\Components\\KYB.jsx",["54","55"],"import React from \"react\";\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nexport default function CTI() {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>\r\n          <span class=\"badge badge-success\">Know Your Business (KYB):</span>\r\n        </h2>\r\n      </div>\r\n      <Form>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"certificate\">Certificate of Incorporation:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"memo\">Memorandum of Association:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"articles\">Articles of Association:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"shareRegister\">Share Register:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"shareCertificate\">\r\n                Share Certificate(s) - Signed:\r\n              </Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"CCR\">Current Commercial Register Extract:</Label>\r\n              <select class=\"custom-select\" id=\"1\">\r\n                <option selected value=\"0\">\r\n                  Pending\r\n                </option>\r\n                <option value=\"1\">Received</option>\r\n                <option value=\"2\">Approved</option>\r\n              </select>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\shahz\\Desktop\\ONBOARD\\OnBoard\\src\\Components\\supportingDocKYB.jsx",["56","57"],{"ruleId":"58","severity":1,"message":"59","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":9},{"ruleId":"58","severity":1,"message":"62","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":14},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"58","severity":1,"message":"67","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"68","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":11},{"ruleId":"58","severity":1,"message":"69","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":16},{"ruleId":"58","severity":1,"message":"70","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":11},{"ruleId":"58","severity":1,"message":"71","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":11},{"ruleId":"58","severity":1,"message":"72","line":1,"column":10,"nodeType":"60","messageId":"61","endLine":1,"endColumn":16},{"ruleId":"58","severity":1,"message":"73","line":4,"column":7,"nodeType":"60","messageId":"61","endLine":4,"endColumn":13},{"ruleId":"58","severity":1,"message":"72","line":2,"column":20,"nodeType":"60","messageId":"61","endLine":2,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":40,"column":6,"nodeType":"76","endLine":40,"endColumn":18,"suggestions":"77"},{"ruleId":"58","severity":1,"message":"72","line":2,"column":20,"nodeType":"60","messageId":"61","endLine":2,"endColumn":26},{"ruleId":"58","severity":1,"message":"72","line":2,"column":20,"nodeType":"60","messageId":"61","endLine":2,"endColumn":26},{"ruleId":"58","severity":1,"message":"78","line":2,"column":52,"nodeType":"60","messageId":"61","endLine":2,"endColumn":57},{"ruleId":"58","severity":1,"message":"72","line":2,"column":20,"nodeType":"60","messageId":"61","endLine":2,"endColumn":26},{"ruleId":"58","severity":1,"message":"78","line":2,"column":52,"nodeType":"60","messageId":"61","endLine":2,"endColumn":57},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"'logo' is defined but never used.","'KYC' is defined but never used.","'Multiple' is defined but never used.","'CTI' is defined but never used.","'KYB' is defined but never used.","'Button' is defined but never used.","'NewKYC' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'startDate'. Either include it or remove the dependency array.","ArrayExpression",["81"],"'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [ExpiryDate, startDate]",{"range":"84","text":"85"},[1352,1364],"[ExpiryDate, startDate]"]